// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.mlag.web;

import org.mlag.model.LoginUser;
import org.mlag.model.Service;
import org.mlag.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<LoginUser, String> ApplicationConversionServiceFactoryBean.getLoginUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.mlag.model.LoginUser, java.lang.String>() {
            public String convert(LoginUser loginUser) {
                return new StringBuilder().append(loginUser.getUsername()).append(' ').append(loginUser.getPassword()).append(' ').append(loginUser.getEmailId()).append(' ').append(loginUser.getFirstName()).toString();
            }
        };
    }
    
    public Converter<Long, LoginUser> ApplicationConversionServiceFactoryBean.getIdToLoginUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.mlag.model.LoginUser>() {
            public org.mlag.model.LoginUser convert(java.lang.Long id) {
                return LoginUser.findLoginUser(id);
            }
        };
    }
    
    public Converter<String, LoginUser> ApplicationConversionServiceFactoryBean.getStringToLoginUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.mlag.model.LoginUser>() {
            public org.mlag.model.LoginUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), LoginUser.class);
            }
        };
    }
    
    public Converter<Service, String> ApplicationConversionServiceFactoryBean.getServiceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.mlag.model.Service, java.lang.String>() {
            public String convert(Service service) {
                return new StringBuilder().append(service.getServicedescription()).append(' ').append(service.getCreatedby()).append(' ').append(service.getUserId()).append(' ').append(service.getCreateddate()).toString();
            }
        };
    }
    
    public Converter<Long, Service> ApplicationConversionServiceFactoryBean.getIdToServiceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.mlag.model.Service>() {
            public org.mlag.model.Service convert(java.lang.Long id) {
                return Service.findService(id);
            }
        };
    }
    
    public Converter<String, Service> ApplicationConversionServiceFactoryBean.getStringToServiceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.mlag.model.Service>() {
            public org.mlag.model.Service convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Service.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getLoginUserToStringConverter());
        registry.addConverter(getIdToLoginUserConverter());
        registry.addConverter(getStringToLoginUserConverter());
        registry.addConverter(getServiceToStringConverter());
        registry.addConverter(getIdToServiceConverter());
        registry.addConverter(getStringToServiceConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
